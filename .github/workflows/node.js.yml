# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js Build and deploy

on:
  push:
    branches: ["master"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  get-branches:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.get-branches.outputs.branches }}
    steps:
      - uses: actions/checkout@v4

      - name: Get list of remote branches and their hashes
        id: get-branches
        run: |
          git fetch --all
          branches="$(git for-each-ref --format='{"name":"%(refname:short)","hash":"%(objectname)"}' refs/remotes/origin/ | sed 's|origin/||' | jq -sc .)"
          echo "branches=$branches" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: get-branches
    continue-on-error: true
    outputs:
      branches: ${{ needs.get-branches.outputs.branches }}

    strategy:
      matrix:
        branches: ${{fromJson(needs.get-branches.outputs.branches)}}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branches.name }}

      - name: Use Node.js
        uses: actions/setup-node@v4

      - name: Build web app
        run: |
          [ -d "puck-ntag215-manager" ]
          cd puck-ntag215-manager
          npm install --no-optional
          npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.branches.hash }}
          path: ./puck-ntag215-manager/dist/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: "artifacts"

      - name: Prepare artifacts
        env:
          branches: ${{ needs.build.outputs.branches }}

        run: |
          mkdir -p "dist/"
          echo "$branches" | jq -c '.[]' | while read -r branch; do
            name="$(echo "$branch" | jq -r '.name')"
            hash="$(echo "$branch" | jq -r '.hash')"

            if [ ! -e "artifacts/$hash" ]; then
              continue
            fi

            if [ "$name" == "master" ]; then
              mv "artifacts/$hash"/* "dist/"
            else
              mkdir -p "dist/$name"
              mv "artifacts/$hash"/* "dist/$name/"
            fi
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
